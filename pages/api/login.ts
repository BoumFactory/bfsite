import { NextApiRequest, NextApiResponse } from "next";
import jwt from "jsonwebtoken";
import { serialize } from "cookie";

/*TODO:
Connecter aux pages de connection. 
Modifier pour collecter le nom mot de passe et mail. 
Faire un module qui g√®re l'envoie test d'un mail s'il correspond aux exigences des mails acad√©miques. 
Impl√©menter la logique de la connection.
*/
const SECRET_KEY = "supersecretkey"; // üîí √Ä stocker dans une variable d'environnement

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "M√©thode non autoris√©e" });
  }

  const { username, password } = req.body;

  // ‚úÖ V√©rification basique : remplacez par un syst√®me plus robuste (BDD)
  if (username === "admin" && password === "password123") {
    // G√©n√©rer un JWT
    const token = jwt.sign({ username }, SECRET_KEY, { expiresIn: "1h" });

    // Stocker le token dans un cookie HTTP s√©curis√©
    res.setHeader("Set-Cookie", serialize("authToken", token, {
      httpOnly: true, // Emp√™che l'acc√®s via JS
      secure: process.env.NODE_ENV === "production", // Activ√© uniquement en prod
      sameSite: "strict",
      path: "/"
    }));

    return res.status(200).json({ message: "Connexion r√©ussie !" });
  }

  return res.status(401).json({ error: "Identifiants incorrects" });
}
